/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProductEntry as PrismaProductEntry } from "@prisma/client";

export class ProductEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductEntryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productEntry.count(args);
  }

  async productEntries(
    args: Prisma.ProductEntryFindManyArgs
  ): Promise<PrismaProductEntry[]> {
    return this.prisma.productEntry.findMany(args);
  }
  async productEntry(
    args: Prisma.ProductEntryFindUniqueArgs
  ): Promise<PrismaProductEntry | null> {
    return this.prisma.productEntry.findUnique(args);
  }
  async createProductEntry(
    args: Prisma.ProductEntryCreateArgs
  ): Promise<PrismaProductEntry> {
    return this.prisma.productEntry.create(args);
  }
  async updateProductEntry(
    args: Prisma.ProductEntryUpdateArgs
  ): Promise<PrismaProductEntry> {
    return this.prisma.productEntry.update(args);
  }
  async deleteProductEntry(
    args: Prisma.ProductEntryDeleteArgs
  ): Promise<PrismaProductEntry> {
    return this.prisma.productEntry.delete(args);
  }
}
